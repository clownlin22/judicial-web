<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rds.trace.mapper.RdsTraceVerifyMapper">
    <insert id="insertVerify" parameterType="map">
        insert into tb_trace_baseinfo_verify (uuid, case_id,
        verify_baseinfo_time, verify_baseinfo_state, verify_baseinfo_person,
        verify_baseinfo_remark) values (#{uuid},#{case_id},
        #{verify_baseinfo_time},#{verify_baseinfo_state},
        #{verify_baseinfo_person},#{verify_baseinfo_remark})
    </insert>

    <select id="queryBaseinfoVerifyByCaseid" parameterType="string"
            resultType="com.rds.trace.model.RdsTraceBaseinfoVerifyModel">
        select * from tb_trace_baseinfo_verify
        where case_id = #{case_id}
        and verify_baseinfo_person is not null
        order by verify_baseinfo_time desc;
    </select>

    <select id="queryVerify" parameterType="map"
            resultType="com.rds.trace.model.RdsTraceCaseInfoModelExt">
        select * from (
        select a.*,c.areaname,d.username,ifnull(e.verify_baseinfo_state,0)
        as verify_baseinfo_state from tb_trace_case_info a
        LEFT JOIN tb_upc_area b ON a.receiver_id=b.area_id
        LEFT JOIN tb_upc_area_info c ON b.areacode=c.areacode
        LEFT JOIN tb_upc_users d ON b.userid = d.userid
        left join
        (select b.verify_baseinfo_state,b.verify_baseinfo_person,b.verify_baseinfo_remark,
        b.verify_baseinfo_time,c.* from tb_trace_baseinfo_verify b
        inner join (select case_id,max(verify_baseinfo_time) as maxtime from tb_trace_baseinfo_verify
        group by case_id) c on b.verify_baseinfo_time = c.maxtime) e
        on a.case_id = e.case_id) f
        where verify_baseinfo_state != 2
        and status in (0,2)
        <if test="case_no!=null and case_no!=''">
            and f.case_no = #{case_no}
        </if>
        <if test="start_time!=null and start_time!=''">
            and f.receive_time>=#{start_time}
        </if>
        <if test="end_time!=null and end_time!=''">
            and #{end_time}>=f.receive_time
        </if>
        <if test="is_delete!=-1">
            and f.is_delete = #{is_delete}
        </if>
        <if test="verify_baseinfo_state!=-1">
            and f.verify_baseinfo_state = #{verify_baseinfo_state}
        </if>
        order by f.verify_baseinfo_state asc,f.case_no asc,f.receive_time desc
        limit #{start},#{limit}
    </select>

    <select id="queryCountVerify" parameterType="map"
            resultType="int">
        select count(*) from (select * from (
        select a.*,c.areaname,d.username,ifnull(e.verify_baseinfo_state,0)
        as verify_baseinfo_state from tb_trace_case_info a
        LEFT JOIN tb_upc_area b ON a.receiver_id=b.area_id
        LEFT JOIN tb_upc_area_info c ON b.areacode=c.areacode
        LEFT JOIN tb_upc_users d ON b.userid = d.userid
        left join
        (select b.verify_baseinfo_state,b.verify_baseinfo_person,b.verify_baseinfo_remark,
        b.verify_baseinfo_time,c.* from tb_trace_baseinfo_verify b
        inner join (select case_id,max(verify_baseinfo_time) as maxtime from tb_trace_baseinfo_verify
        group by case_id) c on b.verify_baseinfo_time = c.maxtime) e
        on a.case_id = e.case_id) f
        where verify_baseinfo_state != 2
        and status in (0,2)
        <if test="case_no!=null and case_no!=''">
            and f.case_no = #{case_no}
        </if>
        <if test="start_time!=null and start_time!=''">
            and f.receive_time>=#{start_time}
        </if>
        <if test="end_time!=null and end_time!=''">
            and #{end_time}>=f.receive_time
        </if>
        <if test="is_delete!=-1">
            and f.is_delete = #{is_delete}
        </if>
        <if test="verify_baseinfo_state!=-1">
            and f.verify_baseinfo_state = #{verify_baseinfo_state}
        </if>) z
    </select>
</mapper>